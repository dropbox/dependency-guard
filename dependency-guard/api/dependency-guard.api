public class com/dropbox/gradle/plugins/dependencyguard/DependencyGuardConfiguration : org/gradle/api/Named {
	public fun <init> (Ljava/lang/String;)V
	public final fun getAllowRule ()Lkotlin/jvm/functions/Function1;
	public final fun getArtifacts ()Z
	public final fun getConfigurationName ()Ljava/lang/String;
	public final fun getModules ()Z
	public fun getName ()Ljava/lang/String;
	public final fun getTree ()Z
	public final fun setAllowRule (Lkotlin/jvm/functions/Function1;)V
	public final fun setArtifacts (Z)V
	public final fun setModules (Z)V
	public final fun setTree (Z)V
}

public final class com/dropbox/gradle/plugins/dependencyguard/DependencyGuardPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public class com/dropbox/gradle/plugins/dependencyguard/DependencyGuardPluginExtension {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;)V
	public final fun configuration (Ljava/lang/String;)V
	public final fun configuration (Ljava/lang/String;Lorg/gradle/api/Action;)V
}

public abstract class com/dropbox/gradle/plugins/dependencyguard/internal/list/DependencyGuardListTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public abstract fun getAvailableConfigurations ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getForRootProject ()Lorg/gradle/api/provider/Property;
	public abstract fun getMonitoredConfigurations ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getShouldBaseline ()Lorg/gradle/api/provider/Property;
}

